volumes:
  gateway_config:
    driver: local
services:
  nats:
    image: nats:latest
    ports:
      - 4222:4222
      - 8222:8222
    command: --http_port 8222 --js
  meili:
    image: getmeili/meilisearch:latest
    ports:
      - 7700:7700
    environment:
      MEILI_MASTER_KEY: "MASTER_KEY"
  postgres:
    image: postgres:14.18
    hostname: postgres 
    ports:
      - 5433:5432
    environment:
    - POSTGRES_USER=yugabyte
    - POSTGRES_PASSWORD=yugabyte
    - PGUSER=yugabyte
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
      start_interval: 5s
  keycloak:
    image: quay.io/keycloak/keycloak:21.0.2
    ports:
      - 1998:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./components/server/tests/common/keycloak/realm.json:/opt/keycloak/data/import/realm.json
    command: "start-dev --import-realm"
  load_database:
    network_mode: "host"
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    image: postgres:alpine3.21
    volumes:
      - ./components/server/tests/common/initial_data.sql:/data/initial_data.sql
      - ./components/server/src/database/schema.sql:/data/schema.sql
      - ./components/data_proxy/src/database/schema.sql:/data/proxy_schema.sql
    command: >
      sh -c "psql 'postgres://yugabyte:yugabyte@localhost:5433' -c 'DROP DATABASE IF EXISTS test' &&
             psql 'postgres://yugabyte:yugabyte@localhost:5433' -c 'DROP DATABASE IF EXISTS proxy' &&
             psql 'postgres://yugabyte:yugabyte@localhost:5433' -c 'CREATE DATABASE test' &&
             psql 'postgres://yugabyte:yugabyte@localhost:5433' -c 'CREATE DATABASE proxy' &&
             psql 'postgres://yugabyte:yugabyte@localhost:5433/proxy' < /data/proxy_schema.sql &&
             psql 'postgres://yugabyte:yugabyte@localhost:5433/test' < /data/schema.sql &&
             psql 'postgres://yugabyte:yugabyte@localhost:5433/test' < /data/initial_data.sql"
  minio:
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_DOMAIN: localhost:9000
    command: "server /data --console-address ':9001'"
